{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/supanat-portfolio/app/components/InfiniteScroll.jsx"],"sourcesContent":["'use client'\r\nimport { useRef, useEffect } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { Observer } from \"gsap/Observer\";\r\nimport '@/app/InfiniteScroll.css';\r\n\r\ngsap.registerPlugin(Observer);\r\n\r\nexport default function InfiniteScroll({\r\n  // ----- Layout / Style Props -----\r\n  width = \"30rem\",             // Width of the outer .wrapper\r\n  maxHeight = \"100%\",          // Max-height of the outer .wrapper\r\n  negativeMargin = \"-0.5em\",   // Negative margin to reduce spacing between items\r\n  // ----- Items Prop -----\r\n  items = [],                  // Array of items with { content: ... }\r\n  itemMinHeight = 150,         // Fixed height for each item\r\n  // ----- Tilt Props -----\r\n  isTilted = false,            // Whether the container is in \"skewed\" perspective\r\n  tiltDirection = \"left\",      // tiltDirection: \"left\" or \"right\"\r\n  // ----- Autoplay Props -----\r\n  autoplay = false,            // Whether it should automatically scroll\r\n  autoplaySpeed = 0.5,          // Speed (pixels/frame approx.)\r\n  autoplayDirection = \"down\",  // \"down\" or \"up\"\r\n  pauseOnHover = false,        // Pause autoplay on hover\r\n}) {\r\n  const wrapperRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  const getTiltTransform = () => {\r\n    if (!isTilted) return \"none\";\r\n    return tiltDirection === \"left\"\r\n      ? \"rotateX(20deg) rotateZ(-20deg) skewX(20deg)\"\r\n      : \"rotateX(20deg) rotateZ(20deg) skewX(-20deg)\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    if (items.length === 0) return;\r\n\r\n    const divItems = gsap.utils.toArray(container.children);\r\n    if (!divItems.length) return;\r\n\r\n    const firstItem = divItems[0];\r\n    const itemStyle = getComputedStyle(firstItem);\r\n    const itemHeight = firstItem.offsetHeight;\r\n    const itemMarginTop = parseFloat(itemStyle.marginTop) || 0;\r\n    const totalItemHeight = itemHeight + itemMarginTop;\r\n    const totalHeight = (itemHeight * items.length) + (itemMarginTop * (items.length - 1));\r\n\r\n    const wrapFn = gsap.utils.wrap(-totalHeight, totalHeight);\r\n\r\n    divItems.forEach((child, i) => {\r\n      const y = i * totalItemHeight;\r\n      gsap.set(child, { y });\r\n    });\r\n\r\n    const observer = Observer.create({\r\n      target: container,\r\n      type: \"wheel,touch,pointer\",\r\n      preventDefault: true,\r\n      onPress: ({ target }) => {\r\n        target.style.cursor = \"grabbing\";\r\n      },\r\n      onRelease: ({ target }) => {\r\n        target.style.cursor = \"grab\";\r\n      },\r\n      onChange: ({ deltaY, isDragging, event }) => {\r\n        const d = event.type === \"wheel\" ? -deltaY : deltaY;\r\n        const distance = isDragging ? d * 5 : d * 10;\r\n        divItems.forEach((child) => {\r\n          gsap.to(child, {\r\n            duration: 0.5,\r\n            ease: \"expo.out\",\r\n            y: `+=${distance}`,\r\n            modifiers: {\r\n              y: gsap.utils.unitize(wrapFn)\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    let rafId;\r\n    if (autoplay) {\r\n      const directionFactor = autoplayDirection === \"down\" ? 1 : -1;\r\n      const speedPerFrame = autoplaySpeed * directionFactor;\r\n\r\n      const tick = () => {\r\n        divItems.forEach((child) => {\r\n          gsap.set(child, {\r\n            y: `+=${speedPerFrame}`,\r\n            modifiers: {\r\n              y: gsap.utils.unitize(wrapFn)\r\n            }\r\n          });\r\n        });\r\n        rafId = requestAnimationFrame(tick);\r\n      };\r\n\r\n      rafId = requestAnimationFrame(tick);\r\n\r\n      if (pauseOnHover) {\r\n        const stopTicker = () => rafId && cancelAnimationFrame(rafId);\r\n        const startTicker = () => (rafId = requestAnimationFrame(tick));\r\n\r\n        container.addEventListener(\"mouseenter\", stopTicker);\r\n        container.addEventListener(\"mouseleave\", startTicker);\r\n\r\n        return () => {\r\n          observer.kill();\r\n          stopTicker();\r\n          container.removeEventListener(\"mouseenter\", stopTicker);\r\n          container.removeEventListener(\"mouseleave\", startTicker);\r\n        };\r\n      } else {\r\n        return () => {\r\n          observer.kill();\r\n          rafId && cancelAnimationFrame(rafId);\r\n        };\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      observer.kill();\r\n      if (rafId) cancelAnimationFrame(rafId);\r\n    };\r\n  }, [\r\n    items,\r\n    autoplay,\r\n    autoplaySpeed,\r\n    autoplayDirection,\r\n    pauseOnHover,\r\n    isTilted,\r\n    tiltDirection,\r\n    negativeMargin\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <style>\r\n        {`\r\n        .infinite-scroll-wrapper {\r\n          max-height: ${maxHeight};\r\n        }\r\n\r\n        .infinite-scroll-container {\r\n          width: ${width};\r\n        }\r\n\r\n        .infinite-scroll-item {\r\n          height: ${itemMinHeight}px;\r\n          margin-top: ${negativeMargin};\r\n        }\r\n        `}\r\n      </style>\r\n\r\n      <div className=\"infinite-scroll-wrapper\" ref={wrapperRef}>\r\n        <div\r\n          className=\"infinite-scroll-container\"\r\n          ref={containerRef}\r\n          style={{\r\n            transform: getTiltTransform(),\r\n          }}\r\n        >\r\n          {items.map((item, i) => (\r\n            <div\r\n              className='infinite-scroll-item'\r\n              key={i}\r\n            >\r\n              {item.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/supanat-portfolio/app/components/Navbar.jsx"],"sourcesContent":["\"use client\";\r\n\r\nexport default function Navbar() {\r\n  const scrollTo = (id) => {\r\n    document.getElementById(id)?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const pages = [\"about\", \"skills\", \"experience\", \"education\"];\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar glass px-1 lg:px-4 lg: mb-12 lg:mb-24 border-b sticky top-0 z-10 text-primary\">\r\n        {/* Navbar Start  */}\r\n        <div className=\"dropdown w-full lg:hidden\">\r\n          <div tabIndex={0} role=\"button\" className=\"btn btn-ghost btn-circle\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6h16M4 12h16M4 18h7\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <ul\r\n            tabIndex={0}\r\n            className=\"menu menu-sm dropdown-content z-[1] mt-3 p-1 rounded-xl border shadow bg-base-100\"\r\n          >\r\n            {pages.map((page, i) => (\r\n              <li key={i} onClick={() => scrollTo(page)}>\r\n                <button className=\"uppercase font-semibold\">{page}</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Navbar Center  */}\r\n        <div className=\"btn btn-ghost text-start\">\r\n          <img\r\n            className=\"w-10 h-10\"\r\n            src=\"/favicon/clover.png\"\r\n            alt=\"clover icon\"\r\n          />\r\n          <div>\r\n            <p className=\"text-base font-semibold -mb-1\">SUPANAT</p>\r\n            <p className=\"text-sm font-medium opacity-60\">Portfolio</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navbar End  */}\r\n        <div className=\"w-full justify-end hidden lg:flex gap-2\">\r\n          {pages.map((page, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={() => scrollTo(page)}\r\n              className=\"btn btn-sm btn-ghost uppercase\"\r\n            >\r\n              {page}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEe,SAAS;IACtB,MAAM,WAAW,CAAC;QAChB,SAAS,cAAc,CAAC,KAAK,eAAe;YAAE,UAAU;QAAS;IACnE;IAEA,MAAM,QAAQ;QAAC;QAAS;QAAU;QAAc;KAAY;IAE5D,qBACE;kBACE,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,UAAU;4BAAG,MAAK;4BAAS,WAAU;sCACxC,cAAA,8OAAC;gCACC,OAAM;gCACN,WAAU;gCACV,MAAK;gCACL,SAAQ;gCACR,QAAO;0CAEP,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAY;oCACZ,GAAE;;;;;;;;;;;;;;;;sCAIR,8OAAC;4BACC,UAAU;4BACV,WAAU;sCAET,MAAM,GAAG,CAAC,CAAC,MAAM,kBAChB,8OAAC;oCAAW,SAAS,IAAM,SAAS;8CAClC,cAAA,8OAAC;wCAAO,WAAU;kDAA2B;;;;;;mCADtC;;;;;;;;;;;;;;;;8BAQf,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAU;4BACV,KAAI;4BACJ,KAAI;;;;;;sCAEN,8OAAC;;8CACC,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAE,WAAU;8CAAiC;;;;;;;;;;;;;;;;;;8BAKlD,8OAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,MAAM,kBAChB,8OAAC;4BAEC,SAAS,IAAM,SAAS;4BACxB,WAAU;sCAET;2BAJI;;;;;;;;;;;;;;;;;AAWnB"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}